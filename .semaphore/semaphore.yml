version: v1.0
name: Train model
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  prologue:
    commands:
      - sem-version python 3.11
      - 'wget https://dvc.org/download/linux-deb/dvc-3.36.1 -O dvc.deb'
      - sudo apt install ./dvc.deb
blocks:
  - name: Train model
    task:
      jobs:
        - name: Train model
          commands:
            - 'cache restore dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache'
            - dvc repro train
            - 'cache store dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache .dvc/cache'
      prologue:
        commands:
          - checkout
          - pip install -r requirements.txt
  - name: Evaluate model
    task:
      prologue:
        commands:
          - checkout
          - pip install -r requirements.txt
      jobs:
        - name: Evaluate
          commands:
            - 'cache restore dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache'
            - dvc repro evaluate
            - 'cache store dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache .dvc/cache'
            - python scripts/predict.py
  - name: Calculate metrics
    task:
      prologue:
        commands:
          - sem-version node 20.10
          - npm install -g @dvcorg/cml
          - checkout
          - pip install -r requirements.txt
      jobs:
        - name: Comment on GitHub
          commands:
            - 'cache restore dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache'
            - dvc repro metrics
            - 'cache store dvc-cache-$SEMAPHORE_WORKFLOW_ID,dvc-cache-$SEMAPHORE_GIT_BRANCH,dvc-cache .dvc/cache'
            - 'echo "# Mean Squared Error over latitude, longitude" > report.md'
            - 'echo "![](./metrics/plot.png "MSE")" > report.md'
            - cml comment create report.md
      secrets:
        - name: tomfern-github
promotions:
  - name: Docker
    pipeline_file: pipeline_2.yml
    auto_promote:
      when: branch = 'main' AND result = 'passed'
